a87 10
#ifdef MTK_HARDWARE
#include <media/stagefright/dpframework/DpBlitStream.h>

#define HAL_PIXEL_FORMAT_NV12_BLK 0x7F000001
#define HAL_PIXEL_FORMAT_I420 (0x32315659 + 0x10)

const OMX_COLOR_FORMATTYPE OMX_MTK_COLOR_FormatYV12 = (OMX_COLOR_FORMATTYPE)0x7F000200;
const OMX_COLOR_FORMATTYPE OMX_COLOR_FormatVendorMTKYUV = (OMX_COLOR_FORMATTYPE)0x7F000001;
#endif

a1038 5
#ifdef MTK_HARDWARE
    OMX_COLOR_FORMATTYPE eHalColorFormat = def.format.video.eColorFormat;
    setHalWindowColorFormat(eHalColorFormat);
#endif

a1045 2
#elif MTK_HARDWARE
            eHalColorFormat,
a1429 23
                break;
        }
    }
}
#endif

#ifdef MTK_HARDWARE
void ACodec::setHalWindowColorFormat(OMX_COLOR_FORMATTYPE &eHalColorFormat) {
    ALOGE("[Decker] setHalWindowColorFormat(%#x) - %s",eHalColorFormat,mComponentName.c_str());

    if (!strncmp("OMX.MTK.", mComponentName.c_str(), 8)) {
        switch (eHalColorFormat) {
            case OMX_COLOR_FormatYUV420Planar:
                eHalColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_I420;
                break;
            case OMX_MTK_COLOR_FormatYV12:
                eHalColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_YV12;
                break;
            case OMX_COLOR_FormatVendorMTKYUV:
                eHalColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_NV12_BLK;
                break;
            default:
                eHalColorFormat = (OMX_COLOR_FORMATTYPE)HAL_PIXEL_FORMAT_I420;
